<!SWEETHEART html>

<python>
# some nice python code can be given here (many thanks to Brython!)
# SweetHeart preset also RethinkDB/WebSocket/Vue3 capabilities for you

def on_update(event):

    """ this updates in realtime RethinkDB using WebSocket 
        it should be called only from html event attributes
        e.g. <input id="row:col" type="text" v-on:keyup="update"> """

    r.table("grid")
    r.filter({"id": event.target.id})
    r.update({"value": event.target.value})
    r.send()

def on_message(event):

    """ catch here WebSocket messages from the server side 
        you see, we handle directly the JavaScript event object """

    document["error"] <= event.data.error

def vue_created(vdata):

    """ this will be called as soon as the Vue3 instance is created
        it allows you fecthing data using ReQL before html rendering
        the vdata argument provides the $data objet of the Vue model """

    #r.table("grid").filter({"id":"headers"}).fetch("headers")
    r.table("grid").count().fetch("row_nbr")

createVueApp({
    'headers': "ABCDEF",
    'row_nbr': 3,
})
</python>


<div v-cloak id="VueApp" class="m-2">
  <h1 class="text-xl">Realtime Table</h1>

  <table class="table-auto">
    <thead>
      <tr>
        <th v-for="th in headers" class="border">{{ th }}</th>
      </tr>
    </thead>
    <tbody>
      <tr v-for="row in row_nbr">
        <td v-for="col in headers.length" class="border">
          <input v-bind:id="row+':'+col" type="text" v-on:keyup="update">
        </td>
      </tr>
    </tbody>
  </table>
</div>
